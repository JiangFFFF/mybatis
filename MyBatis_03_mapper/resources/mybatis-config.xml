<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--
      1.mybatis可以使用properties标签来引入properties配置文件的内容
        resources：引入类路径下的资源
        url：引入网络路径或磁盘路径下的资源

    -->
    <properties resource="dbconfig.properties"></properties>

    <!--
      2.settings包含很多重要的设置项
        setting:用来设置每一个设置项
          name：设置项名
          value：设置项取值
    -->
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!--显式的指定每个我们需要更改的配置的值，即使是默认的，防止版版本更新带来的问题-->
        <!--可以使用延迟加载（按需加载）-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--3.typeAliases：别名处理器，可以为我们的java类型起别名
            别名不区分大小写
          -->
    <typeAliases>
        <!--
        typeAlias：为某个java类型起别名
        type:指定要起别名的类型全类名；默认别名就是类名小写
        alias:指定新的别名
        -->
        <!--    <typeAlias type="com.jiang.mybatis.bean.Employee" alias="emp"/>-->

        <!--
        package:为某个包下的所有类批量起别名批量起别名
          name:指定包名（为当前包以及下面所有后代包的每一个类都起一个默认别名）
        -->
        <package name="com.jiang.mybatis.bean"/>

        <!--批量起别名的情况下，使用@Alias注解为某个类型指定新的别名-->
    </typeAliases>

    <!--
        4、enviroments：mybatis可以配置多种环境,default指定使用某种环境，可以达到快速切换环境
          environment:配置一个具体的环境信息,必须有两个标签,id代表当前环境的唯一标识
            transactionManager:事务管理器
                type:事务管理器类型(JDBC|MANAGED)
            dataSource:数据源
                type:数据源类型(UNPOOLED|POOLED|JNDI)


    -->
    <environments default="development">

        <environment id="test">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>

        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>


    <!--
    5.databaseIdProvider:支持多数据库厂商的

    -->
    <databaseIdProvider type="DB_VENDOR">
        <!--为不同的数据库厂商起别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>

    </databaseIdProvider>



    <!--6、mappers：将sql映射注册到全局配置中-->
    <!-- 将写好的sql映射文件（EmployeeMapper.xml）一定要注册到全局配置文件中（mybatis-config.xml） -->
    <mappers>
        <!--
               mapper：注册一个sql映射
                注册文件:
                resources:引用类路径下的sql映射文件 mybatis/mapper/EmployeeMapper.xml
                url:引用网络路径或磁盘路径下的sql映射文件

                注册接口:
                class:引用(注册)接口,
                    1.有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下
                    2.没有sql映射文件，所有的sql都是利用注解写在接口上
        -->
        <mapper resource="mytabis.mapper/EmployeeMapper.xml"/>
        <mapper resource="mytabis.mapper/EmployeeMapperPlus.xml"/>
        <mapper resource="mytabis.mapper/DepartmentMapper.xml"/>
        <mapper resource="mytabis.mapper/EmployeeMapperDynamicSQL.xml"/>

<!--        <mapper class="com.jiang.mybatis.dao.EmployeeMapperAnnotation"></mapper>-->

<!--        <package name="com.jiang.mybatis.dao"/>-->
    </mappers>
</configuration>